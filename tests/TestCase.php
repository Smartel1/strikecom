<?php

namespace Tests;

use Illuminate\Foundation\Testing\TestCase as BaseTestCase;
use LaravelDoctrine\ORM\Facades\EntityManager;
use RonasIT\Support\AutoDoc\Http\Middleware\AutoDocMiddleware;
use RonasIT\Support\AutoDoc\Services\SwaggerService;
use Tests\Traits\DoctrineTransactions;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        //Если среди трейтов есть DoctrineTransactions - оборачиваем в транзакции
        $uses = array_flip(class_uses_recursive(static::class));
        if (isset($uses[DoctrineTransactions::class])) {
            EntityManager::beginTransaction();
        }

        $this->docService = app(SwaggerService::class);
    }

    public function tearDown()
    {
        $currentTestCount = $this->getTestResultObject()->count();
        $allTestCount = $this->getTestResultObject()->topTestSuite()->count();

        if (($currentTestCount == $allTestCount) && (!$this->hasFailed())) {
            $this->docService->saveProductionData();
        }

        //Если среди трейтов есть DoctrineTransactions - оборачиваем в транзакции
        $uses = array_flip(class_uses_recursive(static::class));
        if (isset($uses[DoctrineTransactions::class])) {
            EntityManager::rollback();
        }

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function skipDocumentationCollecting() {
        AutoDocMiddleware::$skipped = true;
    }
}
